abline(h=(1-1/(N_pop))^10,col="yellow")
abline(h=(1-1/(N_pop))^50,col="blue")
text(addtxt$l,addtxt$h,addtxt$txt[s+(b-1)*length(sigmaX_set)],srt=addtxt$srt,font=addtxt$font,col=addtxt$col,cex=1)
}
}
addtxt<-list(l=50,h=1,txt=c("A","B","C","D","E","F","G","H","I"),srt = 0,font=2,col="black")
#par(mfrow=c(1,1))
#boxplot(data$fit_results)
mut_bias_set<-c("No","Weak","High")
sd_set<-c("Weak","High")
par(mfrow=c(3,2),mai=c(0.7,0.8,0.4,0.8))
for(b in 1:length(bias_set)){
bias=bias_set[b]
for(s in 1:length(sigmaX_set)){
sigma_X=sigmaX_set[s]
#print(beta)
boxplot(data$fit_results[data$bias==bias & data$sigma_tab==sigma_X]~data$N_mod_data[data$bias==bias & data$sigma_tab==sigma_X],ylim=c(0,1), xlab = "Number of complementary modules", ylab = "Fitness",main=paste(mut_bias_set[b],"mutational bias","&",sd_set[s],"mutational variability"),cex.main=1)
abline(h=1-1/N_pop,col="red")
abline(h=(1-1/(N_pop))^2,col="orange")
abline(h=(1-1/(N_pop))^10,col="yellow")
abline(h=(1-1/(N_pop))^50,col="blue")
text(addtxt$l,addtxt$h,addtxt$txt[s+(b-1)*length(sigmaX_set)],srt=addtxt$srt,font=addtxt$font,col=addtxt$col,cex=1)
}
}
addtxt<-list(l=10,h=1,txt=c("A","B","C","D","E","F","G","H","I"),srt = 0,font=2,col="black")
#par(mfrow=c(1,1))
#boxplot(data$fit_results)
mut_bias_set<-c("No","Weak","High")
sd_set<-c("Weak","High")
par(mfrow=c(3,2),mai=c(0.7,0.8,0.4,0.8))
for(b in 1:length(bias_set)){
bias=bias_set[b]
for(s in 1:length(sigmaX_set)){
sigma_X=sigmaX_set[s]
#print(beta)
boxplot(data$fit_results[data$bias==bias & data$sigma_tab==sigma_X]~data$N_mod_data[data$bias==bias & data$sigma_tab==sigma_X],ylim=c(0,1), xlab = "Number of complementary modules", ylab = "Fitness",main=paste(mut_bias_set[b],"mutational bias","&",sd_set[s],"mutational variability"),cex.main=1)
abline(h=1-1/N_pop,col="red")
abline(h=(1-1/(N_pop))^2,col="orange")
abline(h=(1-1/(N_pop))^10,col="yellow")
abline(h=(1-1/(N_pop))^50,col="blue")
text(addtxt$l,addtxt$h,addtxt$txt[s+(b-1)*length(sigmaX_set)],srt=addtxt$srt,font=addtxt$font,col=addtxt$col,cex=1)
}
}
addtxt<-list(l=1,h=1,txt=c("A","B","C","D","E","F","G","H","I"),srt = 0,font=2,col="black")
#par(mfrow=c(1,1))
#boxplot(data$fit_results)
mut_bias_set<-c("No","Weak","High")
sd_set<-c("Weak","High")
par(mfrow=c(3,2),mai=c(0.7,0.8,0.4,0.8))
for(b in 1:length(bias_set)){
bias=bias_set[b]
for(s in 1:length(sigmaX_set)){
sigma_X=sigmaX_set[s]
#print(beta)
boxplot(data$fit_results[data$bias==bias & data$sigma_tab==sigma_X]~data$N_mod_data[data$bias==bias & data$sigma_tab==sigma_X],ylim=c(0,1), xlab = "Number of complementary modules", ylab = "Fitness",main=paste(mut_bias_set[b],"mutational bias","&",sd_set[s],"mutational variability"),cex.main=1)
abline(h=1-1/N_pop,col="red")
abline(h=(1-1/(N_pop))^2,col="orange")
abline(h=(1-1/(N_pop))^10,col="yellow")
abline(h=(1-1/(N_pop))^50,col="blue")
text(addtxt$l,addtxt$h,addtxt$txt[s+(b-1)*length(sigmaX_set)],srt=addtxt$srt,font=addtxt$font,col=addtxt$col,cex=1)
}
}
addtxt<-list(l=1,h=5,txt=c("A","B","C","D","E","F","G","H","I"),srt = 0,font=2,col="black")
#par(mfrow=c(1,1))
#boxplot(data$fit_results)
mut_bias_set<-c("No","Weak","High")
sd_set<-c("Weak","High")
par(mfrow=c(3,2),mai=c(0.7,0.8,0.4,0.8))
for(b in 1:length(bias_set)){
bias=bias_set[b]
for(s in 1:length(sigmaX_set)){
sigma_X=sigmaX_set[s]
#print(beta)
boxplot(data$fit_results[data$bias==bias & data$sigma_tab==sigma_X]~data$N_mod_data[data$bias==bias & data$sigma_tab==sigma_X],ylim=c(0,1), xlab = "Number of complementary modules", ylab = "Fitness",main=paste(mut_bias_set[b],"mutational bias","&",sd_set[s],"mutational variability"),cex.main=1)
abline(h=1-1/N_pop,col="red")
abline(h=(1-1/(N_pop))^2,col="orange")
abline(h=(1-1/(N_pop))^10,col="yellow")
abline(h=(1-1/(N_pop))^50,col="blue")
text(addtxt$l,addtxt$h,addtxt$txt[s+(b-1)*length(sigmaX_set)],srt=addtxt$srt,font=addtxt$font,col=addtxt$col,cex=1)
}
}
addtxt<-list(l=1,h=1,txt=c("A","B","C","D","E","F","G","H","I"),srt = 0,font=2,col="black")
#par(mfrow=c(1,1))
#boxplot(data$fit_results)
mut_bias_set<-c("No","Weak","High")
sd_set<-c("Weak","High")
par(mfrow=c(3,2),mai=c(0.7,0.8,0.4,0.8))
for(b in 1:length(bias_set)){
bias=bias_set[b]
for(s in 1:length(sigmaX_set)){
sigma_X=sigmaX_set[s]
#print(beta)
boxplot(data$fit_results[data$bias==bias & data$sigma_tab==sigma_X]~data$N_mod_data[data$bias==bias & data$sigma_tab==sigma_X],ylim=c(0,1), xlab = "Number of complementary modules", ylab = "Fitness",main=paste(mut_bias_set[b],"mutational bias","&",sd_set[s],"mutational variability"),cex.main=1)
abline(h=1-1/N_pop,col="red")
abline(h=(1-1/(N_pop))^2,col="orange")
abline(h=(1-1/(N_pop))^10,col="yellow")
abline(h=(1-1/(N_pop))^50,col="blue")
text(addtxt$l,addtxt$h,addtxt$txt[s+(b-1)*length(sigmaX_set)],srt=addtxt$srt,font=addtxt$font,col=addtxt$col,cex=1)
}
}
addtxt<-list(l=2,h=1,txt=c("A","B","C","D","E","F","G","H","I"),srt = 0,font=2,col="black")
#par(mfrow=c(1,1))
#boxplot(data$fit_results)
mut_bias_set<-c("No","Weak","High")
sd_set<-c("Weak","High")
par(mfrow=c(3,2),mai=c(0.7,0.8,0.4,0.8))
for(b in 1:length(bias_set)){
bias=bias_set[b]
for(s in 1:length(sigmaX_set)){
sigma_X=sigmaX_set[s]
#print(beta)
boxplot(data$fit_results[data$bias==bias & data$sigma_tab==sigma_X]~data$N_mod_data[data$bias==bias & data$sigma_tab==sigma_X],ylim=c(0,1), xlab = "Number of complementary modules", ylab = "Fitness",main=paste(mut_bias_set[b],"mutational bias","&",sd_set[s],"mutational variability"),cex.main=1)
abline(h=1-1/N_pop,col="red")
abline(h=(1-1/(N_pop))^2,col="orange")
abline(h=(1-1/(N_pop))^10,col="yellow")
abline(h=(1-1/(N_pop))^50,col="blue")
text(addtxt$l,addtxt$h,addtxt$txt[s+(b-1)*length(sigmaX_set)],srt=addtxt$srt,font=addtxt$font,col=addtxt$col,cex=1)
}
}
addtxt<-list(l=10,h=1,txt=c("A","B","C","D","E","F","G","H","I"),srt = 0,font=2,col="black")
#par(mfrow=c(1,1))
#boxplot(data$fit_results)
mut_bias_set<-c("No","Weak","High")
sd_set<-c("Weak","High")
par(mfrow=c(3,2),mai=c(0.7,0.8,0.4,0.8))
for(b in 1:length(bias_set)){
bias=bias_set[b]
for(s in 1:length(sigmaX_set)){
sigma_X=sigmaX_set[s]
#print(beta)
boxplot(data$fit_results[data$bias==bias & data$sigma_tab==sigma_X]~data$N_mod_data[data$bias==bias & data$sigma_tab==sigma_X],ylim=c(0,1), xlab = "Number of complementary modules", ylab = "Fitness",main=paste(mut_bias_set[b],"mutational bias","&",sd_set[s],"mutational variability"),cex.main=1)
abline(h=1-1/N_pop,col="red")
abline(h=(1-1/(N_pop))^2,col="orange")
abline(h=(1-1/(N_pop))^10,col="yellow")
abline(h=(1-1/(N_pop))^50,col="blue")
text(addtxt$l,addtxt$h,addtxt$txt[s+(b-1)*length(sigmaX_set)],srt=addtxt$srt,font=addtxt$font,col=addtxt$col,cex=1)
}
}
addtxt<-list(l=4,h=1,txt=c("A","B","C","D","E","F","G","H","I"),srt = 0,font=2,col="black")
#par(mfrow=c(1,1))
#boxplot(data$fit_results)
mut_bias_set<-c("No","Weak","High")
sd_set<-c("Weak","High")
par(mfrow=c(3,2),mai=c(0.7,0.8,0.4,0.8))
for(b in 1:length(bias_set)){
bias=bias_set[b]
for(s in 1:length(sigmaX_set)){
sigma_X=sigmaX_set[s]
#print(beta)
boxplot(data$fit_results[data$bias==bias & data$sigma_tab==sigma_X]~data$N_mod_data[data$bias==bias & data$sigma_tab==sigma_X],ylim=c(0,1), xlab = "Number of complementary modules", ylab = "Fitness",main=paste(mut_bias_set[b],"mutational bias","&",sd_set[s],"mutational variability"),cex.main=1)
abline(h=1-1/N_pop,col="red")
abline(h=(1-1/(N_pop))^2,col="orange")
abline(h=(1-1/(N_pop))^10,col="yellow")
abline(h=(1-1/(N_pop))^50,col="blue")
text(addtxt$l,addtxt$h,addtxt$txt[s+(b-1)*length(sigmaX_set)],srt=addtxt$srt,font=addtxt$font,col=addtxt$col,cex=1)
}
}
addtxt<-list(l=4.5,h=1,txt=c("A","B","C","D","E","F","G","H","I"),srt = 0,font=2,col="black")
#par(mfrow=c(1,1))
#boxplot(data$fit_results)
mut_bias_set<-c("No","Weak","High")
sd_set<-c("Weak","High")
par(mfrow=c(3,2),mai=c(0.7,0.8,0.4,0.8))
for(b in 1:length(bias_set)){
bias=bias_set[b]
for(s in 1:length(sigmaX_set)){
sigma_X=sigmaX_set[s]
#print(beta)
boxplot(data$fit_results[data$bias==bias & data$sigma_tab==sigma_X]~data$N_mod_data[data$bias==bias & data$sigma_tab==sigma_X],ylim=c(0,1), xlab = "Number of complementary modules", ylab = "Fitness",main=paste(mut_bias_set[b],"mutational bias","&",sd_set[s],"mutational variability"),cex.main=1)
abline(h=1-1/N_pop,col="red")
abline(h=(1-1/(N_pop))^2,col="orange")
abline(h=(1-1/(N_pop))^10,col="yellow")
abline(h=(1-1/(N_pop))^50,col="blue")
text(addtxt$l,addtxt$h,addtxt$txt[s+(b-1)*length(sigmaX_set)],srt=addtxt$srt,font=addtxt$font,col=addtxt$col,cex=1)
}
}
addtxt<-list(l=4.4,h=1,txt=c("A","B","C","D","E","F","G","H","I"),srt = 0,font=2,col="black")
#par(mfrow=c(1,1))
#boxplot(data$fit_results)
mut_bias_set<-c("No","Weak","High")
sd_set<-c("Weak","High")
par(mfrow=c(3,2),mai=c(0.7,0.8,0.4,0.8))
for(b in 1:length(bias_set)){
bias=bias_set[b]
for(s in 1:length(sigmaX_set)){
sigma_X=sigmaX_set[s]
#print(beta)
boxplot(data$fit_results[data$bias==bias & data$sigma_tab==sigma_X]~data$N_mod_data[data$bias==bias & data$sigma_tab==sigma_X],ylim=c(0,1), xlab = "Number of complementary modules", ylab = "Fitness",main=paste(mut_bias_set[b],"mutational bias","&",sd_set[s],"mutational variability"),cex.main=1)
abline(h=1-1/N_pop,col="red")
abline(h=(1-1/(N_pop))^2,col="orange")
abline(h=(1-1/(N_pop))^10,col="yellow")
abline(h=(1-1/(N_pop))^50,col="blue")
text(addtxt$l,addtxt$h,addtxt$txt[s+(b-1)*length(sigmaX_set)],srt=addtxt$srt,font=addtxt$font,col=addtxt$col,cex=1)
}
}
addtxt<-list(l=4.5,h=1,txt=c("A","B","C","D","E","F","G","H","I"),srt = 0,font=2,col="black")
#par(mfrow=c(1,1))
#boxplot(data$fit_results)
mut_bias_set<-c("No","Weak","High")
sd_set<-c("Weak","High")
par(mfrow=c(3,2),mai=c(0.7,0.8,0.4,0.8))
for(b in 1:length(bias_set)){
bias=bias_set[b]
for(s in 1:length(sigmaX_set)){
sigma_X=sigmaX_set[s]
#print(beta)
boxplot(data$fit_results[data$bias==bias & data$sigma_tab==sigma_X]~data$N_mod_data[data$bias==bias & data$sigma_tab==sigma_X],ylim=c(0,1), xlab = "Number of complementary modules", ylab = "Fitness",main=paste(mut_bias_set[b],"mutational bias","&",sd_set[s],"mutational variability"),cex.main=1)
abline(h=1-1/N_pop,col="red")
abline(h=(1-1/(N_pop))^2,col="orange")
abline(h=(1-1/(N_pop))^10,col="yellow")
abline(h=(1-1/(N_pop))^50,col="blue")
text(addtxt$l,addtxt$h,addtxt$txt[s+(b-1)*length(sigmaX_set)],srt=addtxt$srt,font=addtxt$font,col=addtxt$col,cex=1)
}
}
for(b in 1:length(bias_set)){
bias=bias_set[b]
for(s in 1:length(sigmaX_set)){
sigma_X=sigmaX_set[s]
#print(beta)
boxplot(data$fit_results[data$bias==bias & data$sigma_tab==sigma_X]~data$N_mod_data[data$bias==bias & data$sigma_tab==sigma_X],ylim=c(0,1), xlab = "Number of complementary modules", ylab = "Fitness",main=paste(mut_bias_set[b],"mutational bias","&",sd_set[s],"mutational variability"),cex.main=1)
abline(h=1-1/N_pop,col="red")
abline(h=(1-1/(N_pop))^2,col="orange")
abline(h=(1-1/(N_pop))^10,col="yellow")
abline(h=(1-1/(N_pop))^50,col="blue")
text(addtxt$l,addtxt$h,addtxt$txt[s+(b-1)*length(sigmaX_set)],srt=addtxt$srt,font=addtxt$font,col=addtxt$col,cex=1.25)
}
}
addtxt<-list(l=4.5,h=1.05,txt=c("A","B","C","D","E","F","G","H","I"),srt = 0,font=2,col="black")
#par(mfrow=c(1,1))
#boxplot(data$fit_results)
mut_bias_set<-c("No","Weak","High")
sd_set<-c("Weak","High")
par(mfrow=c(3,2),mai=c(0.7,0.8,0.4,0.8))
for(b in 1:length(bias_set)){
bias=bias_set[b]
for(s in 1:length(sigmaX_set)){
sigma_X=sigmaX_set[s]
#print(beta)
boxplot(data$fit_results[data$bias==bias & data$sigma_tab==sigma_X]~data$N_mod_data[data$bias==bias & data$sigma_tab==sigma_X],ylim=c(0,1.05), xlab = "Number of complementary modules", ylab = "Fitness",main=paste(mut_bias_set[b],"mutational bias","&",sd_set[s],"mutational variability"),cex.main=1)
abline(h=1-1/N_pop,col="red")
abline(h=(1-1/(N_pop))^2,col="orange")
abline(h=(1-1/(N_pop))^10,col="yellow")
abline(h=(1-1/(N_pop))^50,col="blue")
text(addtxt$l,addtxt$h,addtxt$txt[s+(b-1)*length(sigmaX_set)],srt=addtxt$srt,font=addtxt$font,col=addtxt$col,cex=1.25)
}
}
#par(mfrow=c(1,1))
#boxplot(data$fit_results)
setwd(dir="~")
setwd(dir="Desktop/Complementary-epistasis/Figures")
mut_bias_set<-c("No","Weak","High")
sd_set<-c("Weak","High")
par(mfrow=c(3,2),mai=c(0.7,0.8,0.4,0.8))
for(b in 1:length(bias_set)){
bias=bias_set[b]
for(s in 1:length(sigmaX_set)){
sigma_X=sigmaX_set[s]
#print(beta)
boxplot(data$fit_results[data$bias==bias & data$sigma_tab==sigma_X]~data$N_mod_data[data$bias==bias & data$sigma_tab==sigma_X],ylim=c(0,1.05), xlab = "Number of complementary modules", ylab = "Fitness",cex.main=1)
abline(h=1-1/N_pop,col="red")
abline(h=(1-1/(N_pop))^2,col="orange")
abline(h=(1-1/(N_pop))^10,col="yellow")
abline(h=(1-1/(N_pop))^50,col="blue")
text(addtxt$l,addtxt$h,addtxt$txt[s+(b-1)*length(sigmaX_set)],srt=addtxt$srt,font=addtxt$font,col=addtxt$col,cex=1.25)
}
}
data<-cbind(data,fit_results)
data<-data.frame(data)
addtxt<-list(l=4.5,h=1.05,txt=c("A","B","C","D","E","F","G","H","I"),srt = 0,font=2,col="black")
#par(mfrow=c(1,1))
#boxplot(data$fit_results)
setwd(dir="~")
setwd(dir="Desktop/Complementary-epistasis/Figures")
mut_bias_set<-c("No","Weak","High")
sd_set<-c("Weak","High")
par(mfrow=c(3,2),mai=c(0.7,0.8,0.4,0.8))
for(b in 1:length(bias_set)){
bias=bias_set[b]
for(s in 1:length(sigmaX_set)){
sigma_X=sigmaX_set[s]
#print(beta)
boxplot(data$fit_results[data$bias==bias & data$sigma_tab==sigma_X]~data$N_mod_data[data$bias==bias & data$sigma_tab==sigma_X],ylim=c(0,1.05), xlab = "Number of complementary modules", ylab = "Fitness",cex.main=1)
abline(h=1-1/N_pop,col="red")
abline(h=(1-1/(N_pop))^2,col="orange")
abline(h=(1-1/(N_pop))^10,col="yellow")
abline(h=(1-1/(N_pop))^50,col="blue")
text(addtxt$l,addtxt$h,addtxt$txt[s+(b-1)*length(sigmaX_set)],srt=addtxt$srt,font=addtxt$font,col=addtxt$col,cex=1.25)
}
}
dev.print(device = jpeg, file = "Evo_Outcomes_Ne10.jpeg", width = 780*3,height=960*3,res=300,type="cairo")
N_pop=N_pop_set[2]
fit_results_Ne100<-c()
N_pop=N_pop_set[2]
fit_results_Ne100<-c()
mod_fit_results_Ne100<-list()
i=0
for(b in 1:length(bias_set)){
bias=bias_set[b]
for(s in 1:length(sigmaX_set)){
sigma_X=sigmaX_set[s]
for(m in 1:length(N_mod_set)){
N_mod=N_mod_set[m]
N_mut=N_mod*N_pop*10^3
for (r in 1:N_rep){
print(paste(b,s,m,r))
i=i+1
f0=1/2
x0<-f0/(1-f0)*Kx
X_tab<-rep(x0,N_mod)
f_tab<-fitness(X_tab,Kx)
f<-min(f_tab)
for (t in 1:N_mut){
pos_mut<-trunc(runif(1,1,N_mod+1))
#xmin<-min(X_tab)
x_curr<-10^(rnorm(1,mean=log10(X_tab[pos_mut])-bias*sigma_X,sd=sigma_X))
#print(f_curr)
f_curr<-fitness(x_curr,Kx)
if(n==1){
if(f_curr==f_tab[pos_mut]){
p_fix=1/N_pop
}
else if(log10(x_curr)>10){
p_fix=1/N_pop
}
else{
p_fix=u_exact((f_curr-f)/f,N_pop,1/N_pop)
}
}
else{
if(f_curr==f_tab[pos_mut]){
p_fix=1/N_pop
}
else if(log10(x_curr)>10){
p_fix=1/N_pop
}
else if(f_tab[pos_mut]==f){
sec_min_fit<-min(f_tab[-which(f_tab==min(f_tab))])
if(f_curr>sec_min_fit){
p_fix=u_exact((sec_min_fit-f)/f,N_pop,1/N_pop)
}
else{
p_fix=u_exact((f_curr-f)/f,N_pop,1/N_pop)
}
}
else{
if(f_curr>f){
p_fix=1/N_pop
}
else{
p_fix=u_exact((f_curr-f)/f,N_pop,1/N_pop)
}
}
}
#print(p_fix)
mut_fix=rbinom(1,1,p_fix)
#print(mut_fix)
if(mut_fix==1){
#print("YES")
X_tab[pos_mut]=x_curr
}
f_tab<-fitness(X_tab,Kx)
f<-min(f_tab)
}
fit_results_Ne100[i]=f
print(f)
mod_fit_results_Ne100[[i]]=f_tab
}
}
}
}
N_mut
N_mod
N_pop_set=c(10,100)
N_pop=N_pop_set[2]
fit_results_Ne100<-c()
mod_fit_results_Ne100<-list()
i=0
for(b in 1:length(bias_set)){
bias=bias_set[b]
for(s in 1:length(sigmaX_set)){
sigma_X=sigmaX_set[s]
for(m in 1:length(N_mod_set)){
N_mod=N_mod_set[m]
N_mut=N_mod*N_pop*10^3
for (r in 1:N_rep){
print(paste(b,s,m,r))
i=i+1
f0=1/2
x0<-f0/(1-f0)*Kx
X_tab<-rep(x0,N_mod)
f_tab<-fitness(X_tab,Kx)
f<-min(f_tab)
for (t in 1:N_mut){
pos_mut<-trunc(runif(1,1,N_mod+1))
#xmin<-min(X_tab)
x_curr<-10^(rnorm(1,mean=log10(X_tab[pos_mut])-bias*sigma_X,sd=sigma_X))
#print(f_curr)
f_curr<-fitness(x_curr,Kx)
if(n==1){
if(f_curr==f_tab[pos_mut]){
p_fix=1/N_pop
}
else if(log10(x_curr)>10){
p_fix=1/N_pop
}
else{
p_fix=u_exact((f_curr-f)/f,N_pop,1/N_pop)
}
}
else{
if(f_curr==f_tab[pos_mut]){
p_fix=1/N_pop
}
else if(log10(x_curr)>10){
p_fix=1/N_pop
}
else if(f_tab[pos_mut]==f){
sec_min_fit<-min(f_tab[-which(f_tab==min(f_tab))])
if(f_curr>sec_min_fit){
p_fix=u_exact((sec_min_fit-f)/f,N_pop,1/N_pop)
}
else{
p_fix=u_exact((f_curr-f)/f,N_pop,1/N_pop)
}
}
else{
if(f_curr>f){
p_fix=1/N_pop
}
else{
p_fix=u_exact((f_curr-f)/f,N_pop,1/N_pop)
}
}
}
#print(p_fix)
mut_fix=rbinom(1,1,p_fix)
#print(mut_fix)
if(mut_fix==1){
#print("YES")
X_tab[pos_mut]=x_curr
}
f_tab<-fitness(X_tab,Kx)
f<-min(f_tab)
}
fit_results_Ne100[i]=f
print(f)
mod_fit_results_Ne100[[i]]=f_tab
}
}
}
}
data<-cbind(data,fit_results_Ne100)
data<-data.frame(data)
par(mfrow=c(3,2))
for(b in 1:length(bias_set)){
bias=bias_set[b]
for(s in 1:length(sigmaX_set)){
sigma_X=sigmaX_set[s]
#print(beta)
boxplot(data$fit_results_Ne100[data$bias==bias & data$sigma_tab==sigma_X]~data$N_mod_data[data$bias==bias & data$sigma_tab==sigma_X],ylim=c(0,1.05), xlab = "Number of complementary modules", ylab = "Fitness",cex.main=1)
abline(h=1-1/N_pop,col="red")
abline(h=(1-1/(2*N_pop))^3,col="orange")
abline(h=(1-1/(2*N_pop))^9,col="yellow")
abline(h=(1-1/(2*N_pop))^27,col="light green")
}
}
setwd(dir="~")
setwd(dir="Desktop/Complementary-epistasis/Figures")
mut_bias_set<-c("No","Weak","High")
sd_set<-c("Weak","High")
par(mfrow=c(3,2),mai=c(0.7,0.8,0.4,0.8))
for(b in 1:length(bias_set)){
bias=bias_set[b]
for(s in 1:length(sigmaX_set)){
sigma_X=sigmaX_set[s]
#print(beta)
boxplot(data$fit_results[data$bias==bias & data$sigma_tab==sigma_X]~data$N_mod_data[data$bias==bias & data$sigma_tab==sigma_X],ylim=c(0,1.05), xlab = "Number of complementary modules", ylab = "Fitness",cex.main=1)
abline(h=1-1/N_pop,col="red")
abline(h=(1-1/(N_pop))^2,col="orange")
abline(h=(1-1/(N_pop))^10,col="yellow")
abline(h=(1-1/(N_pop))^50,col="blue")
text(addtxt$l,addtxt$h,addtxt$txt[s+(b-1)*length(sigmaX_set)],srt=addtxt$srt,font=addtxt$font,col=addtxt$col,cex=1.25)
}
}
N_pop
for(b in 1:length(bias_set)){
bias=bias_set[b]
for(s in 1:length(sigmaX_set)){
sigma_X=sigmaX_set[s]
#print(beta)
boxplot(data$fit_resultsNe100[data$bias==bias & data$sigma_tab==sigma_X]~data$N_mod_data[data$bias==bias & data$sigma_tab==sigma_X],ylim=c(0,1.05), xlab = "Number of complementary modules", ylab = "Fitness",cex.main=1)
abline(h=1-1/N_pop,col="red")
abline(h=(1-1/(N_pop))^2,col="orange")
abline(h=(1-1/(N_pop))^10,col="yellow")
abline(h=(1-1/(N_pop))^50,col="blue")
text(addtxt$l,addtxt$h,addtxt$txt[s+(b-1)*length(sigmaX_set)],srt=addtxt$srt,font=addtxt$font,col=addtxt$col,cex=1.25)
}
}
for(b in 1:length(bias_set)){
bias=bias_set[b]
for(s in 1:length(sigmaX_set)){
sigma_X=sigmaX_set[s]
#print(beta)
boxplot(data$fit_results_Ne100[data$bias==bias & data$sigma_tab==sigma_X]~data$N_mod_data[data$bias==bias & data$sigma_tab==sigma_X],ylim=c(0,1.05), xlab = "Number of complementary modules", ylab = "Fitness",cex.main=1)
abline(h=1-1/N_pop,col="red")
abline(h=(1-1/(N_pop))^2,col="orange")
abline(h=(1-1/(N_pop))^10,col="yellow")
abline(h=(1-1/(N_pop))^50,col="blue")
text(addtxt$l,addtxt$h,addtxt$txt[s+(b-1)*length(sigmaX_set)],srt=addtxt$srt,font=addtxt$font,col=addtxt$col,cex=1.25)
}
}
dev.print(device = jpeg, file = "Evo_Outcomes_Ne100.jpeg", width = 780*3,height=960*3,res=300,type="cairo")
